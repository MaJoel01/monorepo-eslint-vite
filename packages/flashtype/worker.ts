/**
 * Cloudflare Worker entry point that serves the Flashtype static build.
 *
 * The worker delegates all requests to the ASSETS binding generated by Wrangler,
 * which responds with files from the `dist` directory built by Vite. Requests to
 * `/healthz` return a simple health check response so monitoring probes can
 * verify availability without hitting the asset store.
 *
 * @example
 * // During local development Wrangler provides the ASSETS binding automatically.
 * // Deployments receive the same binding in production environments.
 * export default fetch(request, env, ctx);
 */
export default {
	async fetch(request: Request, env: Env): Promise<Response> {
		const url = new URL(request.url);

		if (url.pathname === "/healthz") {
			return new Response("ok", {
				status: 200,
				headers: { "content-type": "text/plain" },
			});
		}

		try {
			return await env.ASSETS.fetch(request);
		} catch (error) {
			console.error("Asset fetch failed", error);
			return new Response("Not Found", {
				status: 404,
				headers: { "content-type": "text/plain" },
			});
		}
	},
};

type Env = {
	ASSETS: {
		fetch(request: Request): Promise<Response>;
	};
};
