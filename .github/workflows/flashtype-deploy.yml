name: Flashtype Deploy

# Requires secrets:
# - CLOUDFLARE_ACCOUNT_ID: Cloudflare account ID for the worker.
# - CLOUDFLARE_API_TOKEN: Token with Workers Scripts Edit permissions (and KV access if needed).

on:
  push:
    branches:
      - main
    paths:
      - packages/flashtype/package.json
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

concurrency:
  group: flashtype-deploy
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PNPM_HOME: ~/.pnpm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect version bump
        id: version
        run: |
          set -euo pipefail

          FILE_PATH="packages/flashtype/package.json"
          NEW_VERSION=$(jq -r '.version' "$FILE_PATH")

          echo "new_version=${NEW_VERSION}" >>"$GITHUB_OUTPUT"

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "changed=true" >>"$GITHUB_OUTPUT"
            echo "reason=manual" >>"$GITHUB_OUTPUT"
            echo "old_version=" >>"$GITHUB_OUTPUT"
            exit 0
          fi

          BEFORE_SHA="${{ github.event.before }}"
          OLD_VERSION=""

          if [ "$BEFORE_SHA" != "0000000000000000000000000000000000000000" ] && \
             git cat-file -e "${BEFORE_SHA}:${FILE_PATH}" 2>/dev/null; then
            OLD_VERSION=$(git show "${BEFORE_SHA}:${FILE_PATH}" | jq -r '.version')
          fi

          echo "old_version=${OLD_VERSION}" >>"$GITHUB_OUTPUT"

          if [ "${OLD_VERSION}" != "${NEW_VERSION}" ]; then
            echo "changed=true" >>"$GITHUB_OUTPUT"
            echo "reason=version-bump" >>"$GITHUB_OUTPUT"
          else
            echo "changed=false" >>"$GITHUB_OUTPUT"
            echo "reason=no-change" >>"$GITHUB_OUTPUT"
          fi

      - name: Skip deployment (version unchanged)
        if: steps.version.outputs.changed != 'true'
        run: echo "No version bump detected for packages/flashtype/package.json; skipping deploy."

      - name: Set up Node.js 22
        if: steps.version.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Enable Corepack
        if: steps.version.outputs.changed == 'true'
        run: corepack enable

      - name: Prepare pnpm
        if: steps.version.outputs.changed == 'true'
        run: corepack prepare pnpm@10.13.1 --activate

      - name: Install dependencies
        if: steps.version.outputs.changed == 'true'
        run: pnpm install --frozen-lockfile

      - name: Deploy Worker
        if: steps.version.outputs.changed == 'true'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: packages/flashtype
          command: deploy
          packageManager: pnpm

      - name: Summarize deployment
        if: success() && steps.version.outputs.changed == 'true'
        run: |
          {
            echo "### Flashtype deployed"
            if [ "${{ steps.version.outputs.reason }}" = "manual" ]; then
              echo "Triggered manually via workflow_dispatch"
            else
              echo "Triggered by version bump on main"
            fi
            echo "Version: ${{ steps.version.outputs.new_version }}"
            if [ -n "${{ steps.version.outputs.old_version }}" ]; then
              echo "Previous version: ${{ steps.version.outputs.old_version }}"
            fi
          } >>"$GITHUB_STEP_SUMMARY"
