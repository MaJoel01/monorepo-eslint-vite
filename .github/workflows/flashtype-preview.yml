name: Flashtype Preview

# Requires secrets:
# - CLOUDFLARE_ACCOUNT_ID: Cloudflare account ID for the worker.
# - CLOUDFLARE_API_TOKEN: Token with Workers Scripts Edit + Workers KV Storage Edit (if needed).

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "packages/flashtype/**"
      - ".github/workflows/flashtype-preview.yml"

permissions:
  contents: read
  pull-requests: write

jobs:
  upload-preview:
    name: Upload Worker Preview
    runs-on: ubuntu-latest
    environment: flashtype-preview
    env:
      PR_ALIAS: pr-${{ github.event.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Upload preview Worker
        id: wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: packages/flashtype
          command: versions upload --preview-alias ${{ env.PR_ALIAS }}
          packageManager: pnpm

      - name: Gather preview info
        id: preview
        if: success()
        env:
          WRANGLER_URL: ${{ steps.wrangler.outputs.deployment-url }}
          WRANGLER_OUTPUT: ${{ steps.wrangler.outputs.command-output }}
          PR_ALIAS: ${{ env.PR_ALIAS }}
        run: |
          url="$WRANGLER_URL"
          if [ -z "$url" ]; then
            url=$(printf '%s' "$WRANGLER_OUTPUT" | grep -Eo 'https://[^ "\\]+' | head -n1 || true)
          fi

          export PREVIEW_URL="$url"
          python <<'PY' >preview_comment.txt
import os
import textwrap

alias = os.environ["PR_ALIAS"]
url = os.environ.get("PREVIEW_URL", "").strip()

width = 38  # total characters including borders

def frame_lines(content: str) -> list[str]:
    if not content:
        return [f"‚îÉ {' ' * (width - 4)} ‚îÉ"]

    wrapped = textwrap.wrap(content, width=width - 4, break_long_words=True, replace_whitespace=False)
    return [f"‚îÉ {line.ljust(width - 4)} ‚îÉ" for line in wrapped]

alias_line = f"‚Ä¢ Alias   : `{alias}`"
if url:
    preview_line = f"‚Ä¢ Preview : {url}"
else:
    preview_line = "‚Ä¢ Preview : Check Wrangler logs"

body_lines = [
    "‚îè" + "‚îÅ" * (width - 2) + "‚îì",
    *frame_lines("üöÄ Flashtype Preview"),
    *frame_lines(""),
    *frame_lines(alias_line),
    *frame_lines(preview_line),
    *frame_lines(""),
    *frame_lines("(rerun the workflow to refresh)"),
    "‚îó" + "‚îÅ" * (width - 2) + "‚îõ",
]

print("<!-- flashtype-preview -->")
print("\n".join(body_lines))
PY

          {
            printf 'url=%s\n' "$url"
            printf 'body<<EOF\n'
            cat preview_comment.txt
            printf '\nEOF\n'
          } >>"$GITHUB_OUTPUT"

      - name: Comment preview link
        if: success()
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body: ${{ steps.preview.outputs.body }}
          body-include: '<!-- flashtype-preview -->'
          edit-mode: replace
