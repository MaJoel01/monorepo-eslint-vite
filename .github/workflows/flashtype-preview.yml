name: Flashtype Preview

# Requires secrets:
# - CLOUDFLARE_ACCOUNT_ID: Cloudflare account ID for the worker.
# - CLOUDFLARE_API_TOKEN: Token with Workers Scripts Edit + Workers KV Storage Edit (if needed).

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "packages/flashtype/**"
      - ".github/workflows/flashtype-preview.yml"

permissions:
  contents: read

jobs:
  upload-preview:
    name: Upload Worker Preview
    runs-on: ubuntu-latest
    environment: flashtype-preview
    env:
      PR_ALIAS: pr-${{ github.event.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Upload preview Worker
        id: wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: packages/flashtype
          command: versions upload --preview-alias ${{ env.PR_ALIAS }}
          packageManager: pnpm

      - name: Comment preview link
        if: success()
        uses: actions/github-script@v7
        env:
          PR_ALIAS: ${{ env.PR_ALIAS }}
          PREVIEW_URL: ${{ steps.wrangler.outputs.deployment-url }}
          COMMAND_OUTPUT: ${{ steps.wrangler.outputs.command-output }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const marker = '<!-- flashtype-preview -->';
            let url = (process.env.PREVIEW_URL || '').trim();

            if (!url && process.env.COMMAND_OUTPUT) {
              const match = process.env.COMMAND_OUTPUT.match(/https?:\/\/[\w\-./?=&%]+/);
              if (match) {
                url = match[0];
              }
            }

            let body = `${marker}\n### Flashtype preview\nAlias: \`${process.env.PR_ALIAS}\`\n`;
            if (url) {
              body += `Preview: ${url}\n`;
            } else {
              body += 'Preview URL is available in the Wrangler action logs.\n';
            }

            const { owner, repo } = context.repo;
            const issue_number = context.issue.number;
            const comments = await github.paginate(github.rest.issues.listComments, { owner, repo, issue_number });
            const existing = comments.find(comment => comment.body && comment.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body });
            }

      - name: Summarize preview URL
        if: success()
        env:
          PREVIEW_URL: ${{ steps.wrangler.outputs.deployment-url }}
        run: |
          echo "### Preview uploaded" >> "$GITHUB_STEP_SUMMARY"
          echo "Alias: $PR_ALIAS" >> "$GITHUB_STEP_SUMMARY"
          if [ -n "$PREVIEW_URL" ]; then
            echo "Preview URL: $PREVIEW_URL" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "The exact preview URL is shown in the Wrangler action logs." >> "$GITHUB_STEP_SUMMARY"
          fi
